#include QMK_KEYBOARD_H

char gr_l[24][9] = {
    "\\alpha",
    "\\beta",
    "\\gamma",
    "\\delta",
    "\\epsilon",
    "\\zeta",
    "\\eta",
    "\\theta",
    "\\iota",
    "\\kappa",
    "\\lambda",
    "\\mu",
    "\\nu",
    "\\xi",
    "o",
    "\\pi",
    "\\rho",
    "\\sigma",
    "\\tau",
    "\\upsilon",
    "\\phi",
    "\\chi",
    "\\psi",
    "\\omega"
};

char gr_u[24][9] = {
    "A",
    "B",
    "\\Gamma",
    "\\Delta",
    "E",
    "Z",
    "H",
    "\\Theta",
    "I",
    "K",
    "\\Lambda",
    "M",
    "N",
    "\\Xi",
    "O",
    "\\Pi",
    "P",
    "\\Sigma",
    "T",
    "\\Upsilon",
    "\\Phi",
    "X",
    "\\Psi",
    "\\Omega"
};

char gr_v[24][12] = {
    "\\alpha",
    "\\beta",
    "\\gamma",
    "\\partial",
    "\\varepsilon",
    "\\zeta",
    "\\eta",
    "\\vartheta",
    "\\iota",
    "\\kappa",
    "\\lambda",
    "\\mu",
    "\\nu",
    "\\xi",
    "o",
    "\\pi",
    "\\varrho",
    "\\sigma",
    "\\tau",
    "\\upsilon",
    "\\varphi",
    "\\chi",
    "\\psi",
    "\\omega"
};

enum custom_keycodes {
    TG_ALPH = SAFE_RANGE,
    TG_BETA,
    TG_GAMM,
    TG_DLTA,
    TG_EPSL,
    TG_ZETA,
    TG_ETA,
    TG_THET,
    TG_IOTA,
    TG_KAPP,
    TG_LMBD,
    TG_MU,
    TG_NU,
    TG_XI,
    TG_OMCR,
    TG_PI,
    TG_RHO,
    TG_SIGM,
    TG_TAU,
    TG_UPSL,
    TG_PHI,
    TG_CHI,
    TG_PSI,
    TG_OMEG,
    TX_REF,
    TX_CITE,
    TM_FRAC,
    TM_TILD,
    TM_SQRT,
    TM_DFDT,
    TM_DFDX,
    TM_DFDY,
    TM_DFDZ,
    TM_MTRX,
    TM_BMRX,
    TM_PMRX,
    NEW_SAFE_RANGE
};

bool process_greek(uint16_t keycode, keyrecord_t *record);
bool process_latex_macro(uint16_t keycode, keyrecord_t *record);

